/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/academics/assignments/teacher/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_assignments_teacher_list"];
        put?: never;
        post: operations["api_academics_assignments_teacher_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/assignments/teacher/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_assignments_teacher_retrieve"];
        put: operations["api_academics_assignments_teacher_update"];
        post?: never;
        delete: operations["api_academics_assignments_teacher_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_assignments_teacher_partial_update"];
        trace?: never;
    };
    "/api/academics/attendance/parent/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_attendance_parent_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/attendance/student/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_attendance_student_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/attendance/teacher/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_attendance_teacher_list"];
        put?: never;
        post: operations["api_academics_attendance_teacher_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/classes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_classes_list"];
        put?: never;
        post: operations["api_academics_classes_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/classes/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_classes_retrieve"];
        put: operations["api_academics_classes_update"];
        post?: never;
        delete: operations["api_academics_classes_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_classes_partial_update"];
        trace?: never;
    };
    "/api/academics/courses/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_courses_list"];
        put?: never;
        post: operations["api_academics_courses_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/courses/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_courses_retrieve"];
        put: operations["api_academics_courses_update"];
        post?: never;
        delete: operations["api_academics_courses_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_courses_partial_update"];
        trace?: never;
    };
    "/api/academics/courses/available/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_courses_available_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/enrollments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_enrollments_list"];
        put?: never;
        post: operations["api_academics_enrollments_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/enrollments/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_enrollments_retrieve"];
        put?: never;
        post?: never;
        delete: operations["api_academics_enrollments_destroy"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/grade-components/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grade_components_list"];
        put?: never;
        post: operations["api_academics_grade_components_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/grade-components/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grade_components_retrieve"];
        put: operations["api_academics_grade_components_update"];
        post?: never;
        delete: operations["api_academics_grade_components_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_grade_components_partial_update"];
        trace?: never;
    };
    "/api/academics/grades/parent/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grades_parent_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/grades/student/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grades_student_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/grades/teacher/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grades_teacher_list"];
        put?: never;
        post: operations["api_academics_grades_teacher_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/grading-scales/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grading_scales_list"];
        put?: never;
        post: operations["api_academics_grading_scales_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/grading-scales/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_grading_scales_retrieve"];
        put: operations["api_academics_grading_scales_update"];
        post?: never;
        delete: operations["api_academics_grading_scales_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_grading_scales_partial_update"];
        trace?: never;
    };
    "/api/academics/lesson-plans/teacher/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_lesson_plans_teacher_list"];
        put?: never;
        post: operations["api_academics_lesson_plans_teacher_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/lesson-plans/teacher/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_lesson_plans_teacher_retrieve"];
        put: operations["api_academics_lesson_plans_teacher_update"];
        post?: never;
        delete: operations["api_academics_lesson_plans_teacher_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_lesson_plans_teacher_partial_update"];
        trace?: never;
    };
    "/api/academics/scores/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_scores_list"];
        put?: never;
        post: operations["api_academics_scores_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/scores/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_scores_retrieve"];
        put: operations["api_academics_scores_update"];
        post?: never;
        delete: operations["api_academics_scores_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_academics_scores_partial_update"];
        trace?: never;
    };
    "/api/academics/student/enrollments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_student_enrollments_list"];
        put?: never;
        post: operations["api_academics_student_enrollments_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/academics/student/enrollments/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_academics_student_enrollments_retrieve"];
        put?: never;
        post?: never;
        delete: operations["api_academics_student_enrollments_destroy"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/accountants/fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_accountants_fees_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/accountants/fees/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_accountants_fees_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/accountants/financial-report/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_accountants_financial_report_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/accountants/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_accountants_payments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/accountants/payments/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_accountants_payments_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Takes a set of user credentials and returns an access and refresh JSON web
         *     token pair to prove the authentication of those credentials. */
        post: operations["api_auth_login_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Takes a token and blacklists it. Must be used with the
         *     `rest_framework_simplejwt.token_blacklist` app installed. */
        post: operations["api_auth_logout_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/communications/bulk-messages/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_communications_bulk_messages_list"];
        put?: never;
        post: operations["api_communications_bulk_messages_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/communications/bulk-messages/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_communications_bulk_messages_retrieve"];
        put: operations["api_communications_bulk_messages_update"];
        post?: never;
        delete: operations["api_communications_bulk_messages_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_communications_bulk_messages_partial_update"];
        trace?: never;
    };
    "/api/communications/messages/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_communications_messages_list"];
        put?: never;
        post: operations["api_communications_messages_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/communications/messages/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_communications_messages_retrieve"];
        put: operations["api_communications_messages_update"];
        post?: never;
        delete: operations["api_communications_messages_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_communications_messages_partial_update"];
        trace?: never;
    };
    "/api/counselors/sessions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_counselors_sessions_list"];
        put?: never;
        post: operations["api_counselors_sessions_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/counselors/sessions/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_counselors_sessions_retrieve"];
        put: operations["api_counselors_sessions_update"];
        post?: never;
        delete: operations["api_counselors_sessions_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_counselors_sessions_partial_update"];
        trace?: never;
    };
    "/api/counselors/students/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_counselors_students_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/counselors/students/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_counselors_students_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/custom_tables/fields/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_custom_tables_fields_list"];
        put?: never;
        post: operations["api_custom_tables_fields_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/custom_tables/fields/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_custom_tables_fields_retrieve"];
        put: operations["api_custom_tables_fields_update"];
        post?: never;
        delete: operations["api_custom_tables_fields_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_custom_tables_fields_partial_update"];
        trace?: never;
    };
    "/api/custom_tables/tables/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_custom_tables_tables_list"];
        put?: never;
        post: operations["api_custom_tables_tables_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/custom_tables/tables/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_custom_tables_tables_retrieve"];
        put: operations["api_custom_tables_tables_update"];
        post?: never;
        delete: operations["api_custom_tables_tables_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_custom_tables_tables_partial_update"];
        trace?: never;
    };
    "/api/dashboard/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_dashboard_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/fees/fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_fees_fees_list"];
        put?: never;
        post: operations["api_fees_fees_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/fees/fees/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_fees_fees_retrieve"];
        put: operations["api_fees_fees_update"];
        post?: never;
        delete: operations["api_fees_fees_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_fees_fees_partial_update"];
        trace?: never;
    };
    "/api/fees/parent/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_fees_parent_payments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/fees/parent/students/{student_id}/unpaid-fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_fees_parent_students_unpaid_fees_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/fees/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_fees_payments_list"];
        put?: never;
        post: operations["api_fees_payments_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/fees/payments/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_fees_payments_retrieve"];
        put: operations["api_fees_payments_update"];
        post?: never;
        delete: operations["api_fees_payments_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_fees_payments_partial_update"];
        trace?: never;
    };
    "/api/librarians/books/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_librarians_books_list"];
        put?: never;
        post: operations["api_librarians_books_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/librarians/books/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_librarians_books_retrieve"];
        put: operations["api_librarians_books_update"];
        post?: never;
        delete: operations["api_librarians_books_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_librarians_books_partial_update"];
        trace?: never;
    };
    "/api/librarians/borrowing-records/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_librarians_borrowing_records_list"];
        put?: never;
        post: operations["api_librarians_borrowing_records_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/librarians/borrowing-records/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_librarians_borrowing_records_retrieve"];
        put: operations["api_librarians_borrowing_records_update"];
        post?: never;
        delete: operations["api_librarians_borrowing_records_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_librarians_borrowing_records_partial_update"];
        trace?: never;
    };
    "/api/librarians/overdue-books/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_librarians_overdue_books_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/attendance/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_attendance_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/classes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_classes_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/courses/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_courses_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/custom/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_custom_retrieve"];
        put?: never;
        post: operations["api_reports_custom_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/download-report-card/{report_card_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_download_report_card_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/enrollment/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_enrollment_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_fees_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/financial/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_financial_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/generate-report-card/{student_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["api_reports_generate_report_card_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_payments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/staff/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_staff_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/student-performance/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_student_performance_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/reports/students/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_reports_students_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/staff/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_staff_list"];
        put?: never;
        post: operations["api_staff_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/staff/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_staff_retrieve"];
        put: operations["api_staff_update"];
        post?: never;
        delete: operations["api_staff_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_staff_partial_update"];
        trace?: never;
    };
    "/api/staff/payroll/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_staff_payroll_list"];
        put?: never;
        post: operations["api_staff_payroll_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/staff/payroll/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_staff_payroll_retrieve"];
        put: operations["api_staff_payroll_update"];
        post?: never;
        delete: operations["api_staff_payroll_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_staff_payroll_partial_update"];
        trace?: never;
    };
    "/api/students/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_students_list"];
        put?: never;
        post: operations["api_students_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/students/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_students_retrieve"];
        put: operations["api_students_update"];
        post?: never;
        delete: operations["api_students_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_students_partial_update"];
        trace?: never;
    };
    "/api/students/applications/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_students_applications_list"];
        put?: never;
        post: operations["api_students_applications_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/students/applications/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_students_applications_retrieve"];
        put: operations["api_students_applications_update"];
        post?: never;
        delete: operations["api_students_applications_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_students_applications_partial_update"];
        trace?: never;
    };
    "/api/token/refresh/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Takes a refresh type JSON web token and returns an access type JSON web
         *     token if the refresh token is valid. */
        post: operations["api_token_refresh_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_list"];
        put?: never;
        post: operations["api_users_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_retrieve"];
        put: operations["api_users_update"];
        post?: never;
        delete: operations["api_users_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_users_partial_update"];
        trace?: never;
    };
    "/api/users/{id}/profile/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_profile_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Takes a set of user credentials and returns an access and refresh JSON web
         *     token pair to prove the authentication of those credentials. */
        post: operations["api_users_login_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/logout/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["api_users_logout_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/me/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_me_retrieve"];
        put: operations["api_users_me_update"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["api_users_me_partial_update"];
        trace?: never;
    };
    "/api/users/parent/children/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/assignments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_assignments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/attendance/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_attendance_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/classes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_classes_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/enrollments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_enrollments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/fees/fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_fees_fees_list"];
        put?: never;
        post: operations["api_users_parent_children_fees_fees_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/fees/fees/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_fees_fees_retrieve"];
        put: operations["api_users_parent_children_fees_fees_update"];
        post?: never;
        delete: operations["api_users_parent_children_fees_fees_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_users_parent_children_fees_fees_partial_update"];
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/fees/parent/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_fees_parent_payments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/fees/parent/students/{student_id}/unpaid-fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_fees_parent_students_unpaid_fees_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/fees/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_fees_payments_list"];
        put?: never;
        post: operations["api_users_parent_children_fees_payments_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/fees/payments/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_fees_payments_retrieve"];
        put: operations["api_users_parent_children_fees_payments_update"];
        post?: never;
        delete: operations["api_users_parent_children_fees_payments_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_users_parent_children_fees_payments_partial_update"];
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/grades/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_grades_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/children/{student_id}/unpaid-fees/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_children_unpaid_fees_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parent/payments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parent_payments_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parents/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parents_list"];
        put?: never;
        post: operations["api_users_parents_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/parents/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["api_users_parents_retrieve"];
        put: operations["api_users_parents_update"];
        post?: never;
        delete: operations["api_users_parents_destroy"];
        options?: never;
        head?: never;
        patch: operations["api_users_parents_partial_update"];
        trace?: never;
    };
    "/api/users/password-reset/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["api_users_password_reset_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/password-reset/confirm/{uid}/{token}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["api_users_password_reset_confirm_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/register/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["api_users_register_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AdmissionApplication: {
            readonly id: number;
            /** Format: uri */
            birth_certificate?: string;
            /** Format: uri */
            transcript?: string;
            /** Format: uri */
            passport_photo?: string;
            first_name: string;
            last_name: string;
            middle_name?: string | null;
            /** Format: date */
            date_of_birth: string;
            gender: string;
            /** Format: email */
            email: string;
            phone_number?: string | null;
            address: string;
            city: string;
            region: string;
            nationality?: string;
            guardian_name: string;
            guardian_phone_number: string;
            /** Format: email */
            guardian_email: string;
            guardian_relationship: string;
            previous_school?: string | null;
            /** Format: date-time */
            readonly application_date: string;
            readonly status: components["schemas"]["AdmissionApplicationStatusEnum"];
            program_of_study?: string | null;
            notes?: string | null;
        };
        /**
         * @description * `PENDING` - Pending
         *     * `REVIEWED` - Reviewed
         *     * `ACCEPTED` - Accepted
         *     * `REJECTED` - Rejected
         * @enum {string}
         */
        AdmissionApplicationStatusEnum: "PENDING" | "REVIEWED" | "ACCEPTED" | "REJECTED";
        Assignment: {
            readonly id: number;
            readonly teacher: string;
            readonly course: string;
            readonly class_assigned: string;
            title: string;
            description: string;
            /** Format: date */
            due_date: string;
            /** Format: decimal */
            max_score?: string;
        };
        Attendance: {
            readonly id: number;
            /** Format: date */
            readonly date: string;
            status?: components["schemas"]["Status352Enum"];
            remark?: string | null;
            readonly student: number;
            readonly class_session: number;
        };
        AttendanceReport: {
            student: components["schemas"]["StudentReport"];
            readonly class_session: string;
            /** Format: date */
            date: string;
            status?: components["schemas"]["Status352Enum"];
        };
        /** @enum {unknown} */
        BlankEnum: "";
        Book: {
            readonly id: number;
            title: string;
            author: string;
            isbn: string;
            publisher: string;
            /** Format: int64 */
            publication_year: number;
            genre: string;
            /** Format: int64 */
            copies_available?: number;
            /** Format: int64 */
            total_copies?: number;
        };
        BorrowingRecord: {
            readonly id: number;
            readonly book: string;
            readonly student: string;
            readonly staff: string;
            /** Format: date */
            readonly borrow_date: string;
            /** Format: date */
            due_date: string;
            /** Format: date */
            return_date?: string | null;
            readonly status: components["schemas"]["BorrowingRecordStatusEnum"];
        };
        /**
         * @description * `Borrowed` - Borrowed
         *     * `Returned` - Returned
         *     * `Overdue` - Overdue
         * @enum {string}
         */
        BorrowingRecordStatusEnum: "Borrowed" | "Returned" | "Overdue";
        BulkMessage: {
            readonly id: number;
            readonly sender: string;
            recipient_group: string;
            /** @description Enter recipient emails or phone numbers separated by commas or newlines. */
            custom_recipients?: string | null;
            subject: string;
            message_body: string;
            delivery_method?: components["schemas"]["DeliveryMethodEnum"];
            readonly status: components["schemas"]["BulkMessageStatusEnum"];
            /** Format: date-time */
            scheduled_time?: string | null;
            /** Format: date-time */
            readonly sent_time: string | null;
        };
        /**
         * @description * `Pending` - Pending
         *     * `Sent` - Sent
         *     * `Failed` - Failed
         * @enum {string}
         */
        BulkMessageStatusEnum: "Pending" | "Sent" | "Failed";
        Class: {
            readonly id: number;
            readonly courses: components["schemas"]["Course"][];
            readonly class_teacher: components["schemas"]["ClassTeacher"];
            name: string;
            academic_year: string;
            /** Format: int64 */
            max_students?: number;
            /** Format: time */
            start_time?: string | null;
            /** Format: time */
            end_time?: string | null;
            room?: string | null;
        };
        ClassReport: {
            readonly id: number;
            name: string;
            academic_year: string;
            /** Format: time */
            start_time?: string | null;
            /** Format: time */
            end_time?: string | null;
            room?: string | null;
        };
        ClassTeacher: {
            readonly id: number;
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username: string;
            first_name?: string;
            last_name?: string;
        };
        /**
         * @description * `QUIZ` - Quiz
         *     * `ASSIGNMENT` - Assignment
         *     * `MIDSEM` - Mid-Semester Exam
         *     * `EXAM` - Final Exam
         * @enum {string}
         */
        ComponentTypeEnum: "QUIZ" | "ASSIGNMENT" | "MIDSEM" | "EXAM";
        CounselingSession: {
            readonly id: number;
            readonly counselor: string;
            student: components["schemas"]["StudentCounselor"];
            /** Format: date-time */
            session_date: string;
            notes: string;
            summary?: string | null;
            is_confidential?: boolean;
        };
        Course: {
            readonly id: number;
            grading_scale: components["schemas"]["GradingScale"];
            name: string;
            code: string;
            description?: string | null;
            level?: (components["schemas"]["LevelEnum"] | components["schemas"]["BlankEnum"] | components["schemas"]["NullEnum"]) | null;
            /** Format: int64 */
            credit_hours?: number;
        };
        CourseReport: {
            readonly id: number;
            name: string;
            code: string;
            level?: (components["schemas"]["LevelEnum"] | components["schemas"]["BlankEnum"] | components["schemas"]["NullEnum"]) | null;
        };
        CustomField: {
            readonly id: number;
            name: string;
            label: string;
            data_type: components["schemas"]["DataTypeEnum"];
            required?: boolean;
            default_value?: string | null;
            help_text?: string | null;
            choices?: unknown;
            table: number;
        };
        CustomTable: {
            readonly id: number;
            readonly fields: components["schemas"]["CustomField"][];
            name: string;
            description?: string | null;
            is_active?: boolean;
            owner: number;
        };
        /**
         * @description * `CharField` - Text
         *     * `IntegerField` - Integer
         *     * `DecimalField` - Decimal
         *     * `BooleanField` - Boolean
         *     * `DateField` - Date
         *     * `DateTimeField` - Date & Time
         * @enum {string}
         */
        DataTypeEnum: "CharField" | "IntegerField" | "DecimalField" | "BooleanField" | "DateField" | "DateTimeField";
        /**
         * @description * `email` - Email
         *     * `sms` - SMS
         * @enum {string}
         */
        DeliveryMethodEnum: "email" | "sms";
        Enrollment: {
            readonly id: number;
            readonly student: number;
            course: number;
            class_enrolled: number;
            /** Format: date */
            readonly enrollment_date: string;
        };
        EnrollmentReport: {
            student: components["schemas"]["StudentReport"];
            readonly course: string;
            readonly class_enrolled: string;
            /** Format: date */
            readonly enrollment_date: string;
        };
        Fee: {
            readonly id: number;
            readonly student: string;
            name: string;
            description?: string | null;
            /** Format: decimal */
            amount: string;
            /** Format: date */
            due_date: string;
        };
        FeeReport: {
            student: components["schemas"]["StudentReport"];
            name: string;
            description?: string | null;
            /** Format: decimal */
            amount: string;
            /** Format: date */
            due_date: string;
        };
        Grade: {
            readonly id: number;
            grading_scale: number;
            /** Format: decimal */
            readonly final_grade: string | null;
            readonly letter_grade: string | null;
            /** Format: date */
            readonly date: string;
            student: number;
            course: number;
        };
        GradeComponent: {
            readonly id: number;
            name: string;
            component_type: components["schemas"]["ComponentTypeEnum"];
            /** Format: decimal */
            max_score?: string;
            /** Format: decimal */
            weight?: string;
            course: number;
            grading_scale?: number | null;
        };
        GradeReport: {
            student: components["schemas"]["StudentReport"];
            readonly course: string;
            /** Format: decimal */
            final_grade?: string | null;
            letter_grade?: string | null;
        };
        GradingScale: {
            readonly id: number;
            name: string;
            level: components["schemas"]["LevelEnum"];
            grades: unknown;
            is_active?: boolean;
        };
        LessonPlan: {
            readonly id: number;
            readonly teacher: string;
            readonly course: string;
            readonly class_taught: string;
            title: string;
            content: string;
            /** Format: date */
            date: string;
            /** Format: time */
            start_time: string;
            /** Format: time */
            end_time: string;
            is_approved?: boolean;
        };
        /**
         * @description * `PRIMARY` - Primary
         *     * `JHS` - Junior High School
         *     * `SHS` - Senior High School
         *     * `UNIVERSITY` - University
         * @enum {string}
         */
        LevelEnum: "PRIMARY" | "JHS" | "SHS" | "UNIVERSITY";
        Message: {
            readonly id: number;
            readonly sender: components["schemas"]["User"];
            readonly recipient: components["schemas"]["User"];
            readonly student: string;
            subject: string;
            body: string;
            /** Format: date-time */
            readonly timestamp: string;
            is_read?: boolean;
        };
        /** @enum {unknown} */
        NullEnum: null;
        Parent: {
            readonly id: number;
            readonly user: number;
            first_name: string;
            last_name: string;
            middle_name?: string | null;
            occupation?: string | null;
            /** Format: email */
            email: string;
            phone_number: string;
            address?: string | null;
            place_of_work?: string | null;
        };
        PatchedAdmissionApplication: {
            readonly id?: number;
            /** Format: uri */
            birth_certificate?: string;
            /** Format: uri */
            transcript?: string;
            /** Format: uri */
            passport_photo?: string;
            first_name?: string;
            last_name?: string;
            middle_name?: string | null;
            /** Format: date */
            date_of_birth?: string;
            gender?: string;
            /** Format: email */
            email?: string;
            phone_number?: string | null;
            address?: string;
            city?: string;
            region?: string;
            nationality?: string;
            guardian_name?: string;
            guardian_phone_number?: string;
            /** Format: email */
            guardian_email?: string;
            guardian_relationship?: string;
            previous_school?: string | null;
            /** Format: date-time */
            readonly application_date?: string;
            readonly status?: components["schemas"]["AdmissionApplicationStatusEnum"];
            program_of_study?: string | null;
            notes?: string | null;
        };
        PatchedAssignment: {
            readonly id?: number;
            readonly teacher?: string;
            readonly course?: string;
            readonly class_assigned?: string;
            title?: string;
            description?: string;
            /** Format: date */
            due_date?: string;
            /** Format: decimal */
            max_score?: string;
        };
        PatchedBook: {
            readonly id?: number;
            title?: string;
            author?: string;
            isbn?: string;
            publisher?: string;
            /** Format: int64 */
            publication_year?: number;
            genre?: string;
            /** Format: int64 */
            copies_available?: number;
            /** Format: int64 */
            total_copies?: number;
        };
        PatchedBorrowingRecord: {
            readonly id?: number;
            readonly book?: string;
            readonly student?: string;
            readonly staff?: string;
            /** Format: date */
            readonly borrow_date?: string;
            /** Format: date */
            due_date?: string;
            /** Format: date */
            return_date?: string | null;
            readonly status?: components["schemas"]["BorrowingRecordStatusEnum"];
        };
        PatchedBulkMessage: {
            readonly id?: number;
            readonly sender?: string;
            recipient_group?: string;
            /** @description Enter recipient emails or phone numbers separated by commas or newlines. */
            custom_recipients?: string | null;
            subject?: string;
            message_body?: string;
            delivery_method?: components["schemas"]["DeliveryMethodEnum"];
            readonly status?: components["schemas"]["BulkMessageStatusEnum"];
            /** Format: date-time */
            scheduled_time?: string | null;
            /** Format: date-time */
            readonly sent_time?: string | null;
        };
        PatchedClass: {
            readonly id?: number;
            readonly courses?: components["schemas"]["Course"][];
            readonly class_teacher?: components["schemas"]["ClassTeacher"];
            name?: string;
            academic_year?: string;
            /** Format: int64 */
            max_students?: number;
            /** Format: time */
            start_time?: string | null;
            /** Format: time */
            end_time?: string | null;
            room?: string | null;
        };
        PatchedCounselingSession: {
            readonly id?: number;
            readonly counselor?: string;
            student?: components["schemas"]["StudentCounselor"];
            /** Format: date-time */
            session_date?: string;
            notes?: string;
            summary?: string | null;
            is_confidential?: boolean;
        };
        PatchedCourse: {
            readonly id?: number;
            grading_scale?: components["schemas"]["GradingScale"];
            name?: string;
            code?: string;
            description?: string | null;
            level?: (components["schemas"]["LevelEnum"] | components["schemas"]["BlankEnum"] | components["schemas"]["NullEnum"]) | null;
            /** Format: int64 */
            credit_hours?: number;
        };
        PatchedCustomField: {
            readonly id?: number;
            name?: string;
            label?: string;
            data_type?: components["schemas"]["DataTypeEnum"];
            required?: boolean;
            default_value?: string | null;
            help_text?: string | null;
            choices?: unknown;
            table?: number;
        };
        PatchedCustomTable: {
            readonly id?: number;
            readonly fields?: components["schemas"]["CustomField"][];
            name?: string;
            description?: string | null;
            is_active?: boolean;
            owner?: number;
        };
        PatchedFee: {
            readonly id?: number;
            readonly student?: string;
            name?: string;
            description?: string | null;
            /** Format: decimal */
            amount?: string;
            /** Format: date */
            due_date?: string;
        };
        PatchedGradeComponent: {
            readonly id?: number;
            name?: string;
            component_type?: components["schemas"]["ComponentTypeEnum"];
            /** Format: decimal */
            max_score?: string;
            /** Format: decimal */
            weight?: string;
            course?: number;
            grading_scale?: number | null;
        };
        PatchedGradingScale: {
            readonly id?: number;
            name?: string;
            level?: components["schemas"]["LevelEnum"];
            grades?: unknown;
            is_active?: boolean;
        };
        PatchedLessonPlan: {
            readonly id?: number;
            readonly teacher?: string;
            readonly course?: string;
            readonly class_taught?: string;
            title?: string;
            content?: string;
            /** Format: date */
            date?: string;
            /** Format: time */
            start_time?: string;
            /** Format: time */
            end_time?: string;
            is_approved?: boolean;
        };
        PatchedMessage: {
            readonly id?: number;
            readonly sender?: components["schemas"]["User"];
            readonly recipient?: components["schemas"]["User"];
            readonly student?: string;
            subject?: string;
            body?: string;
            /** Format: date-time */
            readonly timestamp?: string;
            is_read?: boolean;
        };
        PatchedParent: {
            readonly id?: number;
            readonly user?: number;
            first_name?: string;
            last_name?: string;
            middle_name?: string | null;
            occupation?: string | null;
            /** Format: email */
            email?: string;
            phone_number?: string;
            address?: string | null;
            place_of_work?: string | null;
        };
        PatchedPayment: {
            readonly id?: number;
            readonly fee?: string;
            /** Format: decimal */
            amount_paid?: string;
            /** Format: date */
            payment_date?: string;
            transaction_id?: string | null;
            payment_method?: string | null;
            status?: components["schemas"]["StatusC8bEnum"];
            notes?: string | null;
        };
        PatchedPayroll: {
            readonly id?: number;
            readonly staff?: string;
            /** Format: date */
            start_date?: string;
            /** Format: date */
            end_date?: string;
            /** Format: decimal */
            basic_salary?: string;
            /** Format: decimal */
            allowances?: string;
            /** Format: decimal */
            deductions?: string;
            /** Format: decimal */
            readonly net_pay?: string;
            /** Format: date */
            payment_date?: string;
            status?: components["schemas"]["PayrollStatusEnum"];
            notes?: string | null;
        };
        PatchedScore: {
            readonly id?: number;
            /** Format: decimal */
            score?: string;
            /** Format: date */
            readonly date?: string;
            student?: number;
            component?: number;
        };
        PatchedStaff: {
            readonly id?: number;
            readonly user?: number;
            readonly staff_id?: string;
            first_name?: string;
            last_name?: string;
            middle_name?: string | null;
            /** Format: date */
            date_of_birth?: string;
            gender?: string;
            address?: string;
            city?: string;
            region?: string;
            nationality?: string;
            /** Format: email */
            email?: string;
            phone_number?: string;
            qualification?: string;
            experience?: string | null;
            /** Format: date */
            date_joined?: string;
            social_security_number?: string | null;
            bank_name?: string | null;
            bank_account_number?: string | null;
            bank_branch?: string | null;
            /** Format: decimal */
            salary?: string;
        };
        PatchedStudent: {
            readonly id?: number;
            readonly user?: components["schemas"]["StudentUser"];
            readonly parent?: components["schemas"]["Parent"];
            readonly student_id?: string;
            first_name?: string;
            last_name?: string;
            middle_name?: string | null;
            /** Format: date */
            date_of_birth?: string;
            gender?: string;
            address?: string;
            city?: string;
            region?: string;
            nationality?: string;
            /** Format: email */
            email?: string;
            phone_number?: string | null;
            readonly admission_number?: string;
            /** Format: date */
            readonly admission_date?: string;
            emergency_contact_name?: string;
            emergency_contact_phone?: string;
            emergency_contact_relationship?: string;
            medical_conditions?: string | null;
            allergies?: string | null;
            previous_school_name?: string | null;
            previous_school_address?: string | null;
            previous_school_contact?: string | null;
            religion?: string | null;
            denomination?: string | null;
        };
        PatchedUser: {
            readonly id?: number;
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username?: string;
            /**
             * Email address
             * Format: email
             */
            email?: string;
            role?: components["schemas"]["RoleEnum"];
            first_name?: string;
            last_name?: string;
            /** Format: uri */
            profile_picture?: string | null;
        };
        Payment: {
            readonly id: number;
            readonly fee: string;
            /** Format: decimal */
            amount_paid: string;
            /** Format: date */
            payment_date: string;
            transaction_id?: string | null;
            payment_method?: string | null;
            status?: components["schemas"]["StatusC8bEnum"];
            notes?: string | null;
        };
        PaymentReport: {
            fee: components["schemas"]["FeeReport"];
            /** Format: decimal */
            amount_paid: string;
            /** Format: date */
            payment_date: string;
            transaction_id?: string | null;
            status?: components["schemas"]["StatusC8bEnum"];
        };
        Payroll: {
            readonly id: number;
            readonly staff: string;
            /** Format: date */
            start_date: string;
            /** Format: date */
            end_date: string;
            /** Format: decimal */
            basic_salary: string;
            /** Format: decimal */
            allowances?: string;
            /** Format: decimal */
            deductions?: string;
            /** Format: decimal */
            readonly net_pay: string;
            /** Format: date */
            payment_date: string;
            status?: components["schemas"]["PayrollStatusEnum"];
            notes?: string | null;
        };
        /**
         * @description * `Pending` - Pending
         *     * `Paid` - Paid
         * @enum {string}
         */
        PayrollStatusEnum: "Pending" | "Paid";
        /**
         * @description * `ADMIN` - Admin
         *     * `TEACHER` - Teacher
         *     * `STUDENT` - Student
         *     * `PARENT` - Parent
         *     * `STAFF` - Staff
         *     * `ACCOUNTANT` - Accountant
         *     * `LIBRARIAN` - Librarian
         *     * `COUNSELOR` - Counselor
         * @enum {string}
         */
        RoleEnum: "ADMIN" | "TEACHER" | "STUDENT" | "PARENT" | "STAFF" | "ACCOUNTANT" | "LIBRARIAN" | "COUNSELOR";
        Score: {
            readonly id: number;
            /** Format: decimal */
            score: string;
            /** Format: date */
            readonly date: string;
            student: number;
            component: number;
        };
        Staff: {
            readonly id: number;
            readonly user: number;
            readonly staff_id: string;
            first_name: string;
            last_name: string;
            middle_name?: string | null;
            /** Format: date */
            date_of_birth: string;
            gender: string;
            address: string;
            city: string;
            region: string;
            nationality?: string;
            /** Format: email */
            email: string;
            phone_number: string;
            qualification: string;
            experience?: string | null;
            /** Format: date */
            date_joined: string;
            social_security_number?: string | null;
            bank_name?: string | null;
            bank_account_number?: string | null;
            bank_branch?: string | null;
            /** Format: decimal */
            salary?: string;
        };
        StaffReport: {
            readonly id: number;
            first_name: string;
            last_name: string;
            staff_id: string;
        };
        /**
         * @description * `PRESENT` - Present
         *     * `ABSENT` - Absent
         *     * `LATE` - Late
         *     * `EXCUSED` - Excused
         * @enum {string}
         */
        Status352Enum: "PRESENT" | "ABSENT" | "LATE" | "EXCUSED";
        /**
         * @description * `Pending` - Pending
         *     * `Completed` - Completed
         *     * `Failed` - Failed
         * @enum {string}
         */
        StatusC8bEnum: "Pending" | "Completed" | "Failed";
        Student: {
            readonly id: number;
            readonly user: components["schemas"]["StudentUser"];
            readonly parent: components["schemas"]["Parent"];
            readonly student_id: string;
            first_name: string;
            last_name: string;
            middle_name?: string | null;
            /** Format: date */
            date_of_birth: string;
            gender: string;
            address: string;
            city: string;
            region: string;
            nationality?: string;
            /** Format: email */
            email: string;
            phone_number?: string | null;
            readonly admission_number: string;
            /** Format: date */
            readonly admission_date: string;
            emergency_contact_name: string;
            emergency_contact_phone: string;
            emergency_contact_relationship: string;
            medical_conditions?: string | null;
            allergies?: string | null;
            previous_school_name?: string | null;
            previous_school_address?: string | null;
            previous_school_contact?: string | null;
            religion?: string | null;
            denomination?: string | null;
        };
        StudentCounselor: {
            readonly id: number;
            user: components["schemas"]["User"];
        };
        StudentReport: {
            readonly id: number;
            first_name: string;
            last_name: string;
            student_id: string;
        };
        StudentUser: {
            readonly id: number;
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username: string;
            /**
             * Email address
             * Format: email
             */
            email?: string;
            first_name?: string;
            last_name?: string;
            /** Format: uri */
            profile_picture?: string | null;
        };
        TokenBlacklist: {
            refresh: string;
        };
        TokenObtainPair: {
            username: string;
            password: string;
            readonly access: string;
            readonly refresh: string;
        };
        TokenRefresh: {
            readonly access: string;
            refresh: string;
        };
        User: {
            readonly id: number;
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username: string;
            /**
             * Email address
             * Format: email
             */
            email?: string;
            role?: components["schemas"]["RoleEnum"];
            first_name?: string;
            last_name?: string;
            /** Format: uri */
            profile_picture?: string | null;
        };
        UserCreate: {
            readonly id: number;
            /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
            username: string;
            /**
             * Email address
             * Format: email
             */
            email?: string;
            password: string;
            role: components["schemas"]["RoleEnum"];
            first_name?: string;
            last_name?: string;
            /** Format: uri */
            profile_picture?: string | null;
            /** Format: date */
            date_of_birth?: string;
            gender?: string;
            address?: string;
            city?: string;
            region?: string;
            /** @default Ghanaian */
            nationality: string;
            phone_number?: string;
            /**
             * Active
             * @description Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
             */
            is_active?: boolean;
            /**
             * Staff status
             * @description Designates whether the user can log into this admin site.
             */
            is_staff?: boolean;
            /**
             * Superuser status
             * @description Designates that this user has all permissions without explicitly assigning them.
             */
            is_superuser?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_academics_assignments_teacher_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Assignment"][];
                };
            };
        };
    };
    api_academics_assignments_teacher_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Assignment"];
                "application/x-www-form-urlencoded": components["schemas"]["Assignment"];
                "multipart/form-data": components["schemas"]["Assignment"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Assignment"];
                };
            };
        };
    };
    api_academics_assignments_teacher_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Assignment"];
                };
            };
        };
    };
    api_academics_assignments_teacher_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Assignment"];
                "application/x-www-form-urlencoded": components["schemas"]["Assignment"];
                "multipart/form-data": components["schemas"]["Assignment"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Assignment"];
                };
            };
        };
    };
    api_academics_assignments_teacher_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_assignments_teacher_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedAssignment"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedAssignment"];
                "multipart/form-data": components["schemas"]["PatchedAssignment"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Assignment"];
                };
            };
        };
    };
    api_academics_attendance_parent_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Attendance"][];
                };
            };
        };
    };
    api_academics_attendance_student_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Attendance"][];
                };
            };
        };
    };
    api_academics_attendance_teacher_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Attendance"][];
                };
            };
        };
    };
    api_academics_attendance_teacher_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["Attendance"];
                "application/x-www-form-urlencoded": components["schemas"]["Attendance"];
                "multipart/form-data": components["schemas"]["Attendance"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Attendance"];
                };
            };
        };
    };
    api_academics_classes_list: {
        parameters: {
            query?: {
                academic_year?: string;
                class_teacher?: number;
                courses?: number[];
                end_time?: string;
                name?: string;
                room?: string;
                /** @description A search term. */
                search?: string;
                start_time?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Class"][];
                };
            };
        };
    };
    api_academics_classes_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Class"];
                "application/x-www-form-urlencoded": components["schemas"]["Class"];
                "multipart/form-data": components["schemas"]["Class"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Class"];
                };
            };
        };
    };
    api_academics_classes_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Class"];
                };
            };
        };
    };
    api_academics_classes_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Class"];
                "application/x-www-form-urlencoded": components["schemas"]["Class"];
                "multipart/form-data": components["schemas"]["Class"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Class"];
                };
            };
        };
    };
    api_academics_classes_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_classes_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedClass"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedClass"];
                "multipart/form-data": components["schemas"]["PatchedClass"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Class"];
                };
            };
        };
    };
    api_academics_courses_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"][];
                };
            };
        };
    };
    api_academics_courses_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Course"];
                "application/x-www-form-urlencoded": components["schemas"]["Course"];
                "multipart/form-data": components["schemas"]["Course"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"];
                };
            };
        };
    };
    api_academics_courses_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"];
                };
            };
        };
    };
    api_academics_courses_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Course"];
                "application/x-www-form-urlencoded": components["schemas"]["Course"];
                "multipart/form-data": components["schemas"]["Course"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"];
                };
            };
        };
    };
    api_academics_courses_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_courses_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedCourse"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedCourse"];
                "multipart/form-data": components["schemas"]["PatchedCourse"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"];
                };
            };
        };
    };
    api_academics_courses_available_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Course"][];
                };
            };
        };
    };
    api_academics_enrollments_list: {
        parameters: {
            query?: {
                class_enrolled?: number;
                course?: number;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"][];
                };
            };
        };
    };
    api_academics_enrollments_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Enrollment"];
                "application/x-www-form-urlencoded": components["schemas"]["Enrollment"];
                "multipart/form-data": components["schemas"]["Enrollment"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"];
                };
            };
        };
    };
    api_academics_enrollments_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"];
                };
            };
        };
    };
    api_academics_enrollments_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_grade_components_list: {
        parameters: {
            query?: {
                /** @description * `QUIZ` - Quiz
                 *     * `ASSIGNMENT` - Assignment
                 *     * `MIDSEM` - Mid-Semester Exam
                 *     * `EXAM` - Final Exam */
                component_type?: "ASSIGNMENT" | "EXAM" | "MIDSEM" | "QUIZ";
                course?: number;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradeComponent"][];
                };
            };
        };
    };
    api_academics_grade_components_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GradeComponent"];
                "application/x-www-form-urlencoded": components["schemas"]["GradeComponent"];
                "multipart/form-data": components["schemas"]["GradeComponent"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradeComponent"];
                };
            };
        };
    };
    api_academics_grade_components_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradeComponent"];
                };
            };
        };
    };
    api_academics_grade_components_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GradeComponent"];
                "application/x-www-form-urlencoded": components["schemas"]["GradeComponent"];
                "multipart/form-data": components["schemas"]["GradeComponent"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradeComponent"];
                };
            };
        };
    };
    api_academics_grade_components_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_grade_components_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedGradeComponent"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedGradeComponent"];
                "multipart/form-data": components["schemas"]["PatchedGradeComponent"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradeComponent"];
                };
            };
        };
    };
    api_academics_grades_parent_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Grade"][];
                };
            };
        };
    };
    api_academics_grades_student_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Grade"][];
                };
            };
        };
    };
    api_academics_grades_teacher_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Grade"][];
                };
            };
        };
    };
    api_academics_grades_teacher_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Grade"];
                "application/x-www-form-urlencoded": components["schemas"]["Grade"];
                "multipart/form-data": components["schemas"]["Grade"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Grade"];
                };
            };
        };
    };
    api_academics_grading_scales_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradingScale"][];
                };
            };
        };
    };
    api_academics_grading_scales_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GradingScale"];
                "application/x-www-form-urlencoded": components["schemas"]["GradingScale"];
                "multipart/form-data": components["schemas"]["GradingScale"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradingScale"];
                };
            };
        };
    };
    api_academics_grading_scales_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradingScale"];
                };
            };
        };
    };
    api_academics_grading_scales_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GradingScale"];
                "application/x-www-form-urlencoded": components["schemas"]["GradingScale"];
                "multipart/form-data": components["schemas"]["GradingScale"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradingScale"];
                };
            };
        };
    };
    api_academics_grading_scales_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_grading_scales_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedGradingScale"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedGradingScale"];
                "multipart/form-data": components["schemas"]["PatchedGradingScale"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradingScale"];
                };
            };
        };
    };
    api_academics_lesson_plans_teacher_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonPlan"][];
                };
            };
        };
    };
    api_academics_lesson_plans_teacher_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LessonPlan"];
                "application/x-www-form-urlencoded": components["schemas"]["LessonPlan"];
                "multipart/form-data": components["schemas"]["LessonPlan"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonPlan"];
                };
            };
        };
    };
    api_academics_lesson_plans_teacher_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonPlan"];
                };
            };
        };
    };
    api_academics_lesson_plans_teacher_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LessonPlan"];
                "application/x-www-form-urlencoded": components["schemas"]["LessonPlan"];
                "multipart/form-data": components["schemas"]["LessonPlan"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonPlan"];
                };
            };
        };
    };
    api_academics_lesson_plans_teacher_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_lesson_plans_teacher_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedLessonPlan"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedLessonPlan"];
                "multipart/form-data": components["schemas"]["PatchedLessonPlan"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LessonPlan"];
                };
            };
        };
    };
    api_academics_scores_list: {
        parameters: {
            query?: {
                component?: number;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Score"][];
                };
            };
        };
    };
    api_academics_scores_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Score"];
                "application/x-www-form-urlencoded": components["schemas"]["Score"];
                "multipart/form-data": components["schemas"]["Score"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Score"];
                };
            };
        };
    };
    api_academics_scores_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Score"];
                };
            };
        };
    };
    api_academics_scores_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Score"];
                "application/x-www-form-urlencoded": components["schemas"]["Score"];
                "multipart/form-data": components["schemas"]["Score"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Score"];
                };
            };
        };
    };
    api_academics_scores_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_academics_scores_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedScore"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedScore"];
                "multipart/form-data": components["schemas"]["PatchedScore"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Score"];
                };
            };
        };
    };
    api_academics_student_enrollments_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"][];
                };
            };
        };
    };
    api_academics_student_enrollments_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Enrollment"];
                "application/x-www-form-urlencoded": components["schemas"]["Enrollment"];
                "multipart/form-data": components["schemas"]["Enrollment"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"];
                };
            };
        };
    };
    api_academics_student_enrollments_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"];
                };
            };
        };
    };
    api_academics_student_enrollments_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_accountants_fees_list: {
        parameters: {
            query?: {
                due_date?: string;
                name?: string;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"][];
                };
            };
        };
    };
    api_accountants_fees_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_accountants_financial_report_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_accountants_payments_list: {
        parameters: {
            query?: {
                fee?: number;
                payment_method?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `Pending` - Pending
                 *     * `Completed` - Completed
                 *     * `Failed` - Failed */
                status?: "Completed" | "Failed" | "Pending";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_accountants_payments_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_auth_login_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenObtainPair"];
                "application/x-www-form-urlencoded": components["schemas"]["TokenObtainPair"];
                "multipart/form-data": components["schemas"]["TokenObtainPair"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenObtainPair"];
                };
            };
        };
    };
    api_auth_logout_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenBlacklist"];
                "application/x-www-form-urlencoded": components["schemas"]["TokenBlacklist"];
                "multipart/form-data": components["schemas"]["TokenBlacklist"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenBlacklist"];
                };
            };
        };
    };
    api_communications_bulk_messages_list: {
        parameters: {
            query?: {
                /** @description * `email` - Email
                 *     * `sms` - SMS */
                delivery_method?: "email" | "sms";
                recipient_group?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `Pending` - Pending
                 *     * `Sent` - Sent
                 *     * `Failed` - Failed */
                status?: "Failed" | "Pending" | "Sent";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulkMessage"][];
                };
            };
        };
    };
    api_communications_bulk_messages_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BulkMessage"];
                "application/x-www-form-urlencoded": components["schemas"]["BulkMessage"];
                "multipart/form-data": components["schemas"]["BulkMessage"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulkMessage"];
                };
            };
        };
    };
    api_communications_bulk_messages_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulkMessage"];
                };
            };
        };
    };
    api_communications_bulk_messages_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BulkMessage"];
                "application/x-www-form-urlencoded": components["schemas"]["BulkMessage"];
                "multipart/form-data": components["schemas"]["BulkMessage"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulkMessage"];
                };
            };
        };
    };
    api_communications_bulk_messages_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_communications_bulk_messages_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedBulkMessage"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedBulkMessage"];
                "multipart/form-data": components["schemas"]["PatchedBulkMessage"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BulkMessage"];
                };
            };
        };
    };
    api_communications_messages_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"][];
                };
            };
        };
    };
    api_communications_messages_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Message"];
                "application/x-www-form-urlencoded": components["schemas"]["Message"];
                "multipart/form-data": components["schemas"]["Message"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    api_communications_messages_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    api_communications_messages_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Message"];
                "application/x-www-form-urlencoded": components["schemas"]["Message"];
                "multipart/form-data": components["schemas"]["Message"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    api_communications_messages_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_communications_messages_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedMessage"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedMessage"];
                "multipart/form-data": components["schemas"]["PatchedMessage"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Message"];
                };
            };
        };
    };
    api_counselors_sessions_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CounselingSession"][];
                };
            };
        };
    };
    api_counselors_sessions_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CounselingSession"];
                "application/x-www-form-urlencoded": components["schemas"]["CounselingSession"];
                "multipart/form-data": components["schemas"]["CounselingSession"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CounselingSession"];
                };
            };
        };
    };
    api_counselors_sessions_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CounselingSession"];
                };
            };
        };
    };
    api_counselors_sessions_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CounselingSession"];
                "application/x-www-form-urlencoded": components["schemas"]["CounselingSession"];
                "multipart/form-data": components["schemas"]["CounselingSession"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CounselingSession"];
                };
            };
        };
    };
    api_counselors_sessions_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_counselors_sessions_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedCounselingSession"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedCounselingSession"];
                "multipart/form-data": components["schemas"]["PatchedCounselingSession"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CounselingSession"];
                };
            };
        };
    };
    api_counselors_students_list: {
        parameters: {
            query?: {
                first_name?: string;
                gender?: string;
                last_name?: string;
                region?: string;
                /** @description A search term. */
                search?: string;
                student_id?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StudentCounselor"][];
                };
            };
        };
    };
    api_counselors_students_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StudentCounselor"];
                };
            };
        };
    };
    api_custom_tables_fields_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomField"][];
                };
            };
        };
    };
    api_custom_tables_fields_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomField"];
                "application/x-www-form-urlencoded": components["schemas"]["CustomField"];
                "multipart/form-data": components["schemas"]["CustomField"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomField"];
                };
            };
        };
    };
    api_custom_tables_fields_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomField"];
                };
            };
        };
    };
    api_custom_tables_fields_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomField"];
                "application/x-www-form-urlencoded": components["schemas"]["CustomField"];
                "multipart/form-data": components["schemas"]["CustomField"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomField"];
                };
            };
        };
    };
    api_custom_tables_fields_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_custom_tables_fields_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedCustomField"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedCustomField"];
                "multipart/form-data": components["schemas"]["PatchedCustomField"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomField"];
                };
            };
        };
    };
    api_custom_tables_tables_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTable"][];
                };
            };
        };
    };
    api_custom_tables_tables_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTable"];
                "application/x-www-form-urlencoded": components["schemas"]["CustomTable"];
                "multipart/form-data": components["schemas"]["CustomTable"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTable"];
                };
            };
        };
    };
    api_custom_tables_tables_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTable"];
                };
            };
        };
    };
    api_custom_tables_tables_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CustomTable"];
                "application/x-www-form-urlencoded": components["schemas"]["CustomTable"];
                "multipart/form-data": components["schemas"]["CustomTable"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTable"];
                };
            };
        };
    };
    api_custom_tables_tables_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_custom_tables_tables_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedCustomTable"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedCustomTable"];
                "multipart/form-data": components["schemas"]["PatchedCustomTable"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CustomTable"];
                };
            };
        };
    };
    api_dashboard_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_fees_fees_list: {
        parameters: {
            query?: {
                due_date?: string;
                name?: string;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"][];
                };
            };
        };
    };
    api_fees_fees_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Fee"];
                "application/x-www-form-urlencoded": components["schemas"]["Fee"];
                "multipart/form-data": components["schemas"]["Fee"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_fees_fees_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_fees_fees_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Fee"];
                "application/x-www-form-urlencoded": components["schemas"]["Fee"];
                "multipart/form-data": components["schemas"]["Fee"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_fees_fees_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_fees_fees_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedFee"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedFee"];
                "multipart/form-data": components["schemas"]["PatchedFee"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_fees_parent_payments_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_fees_parent_students_unpaid_fees_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"][];
                };
            };
        };
    };
    api_fees_payments_list: {
        parameters: {
            query?: {
                fee?: number;
                payment_method?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `Pending` - Pending
                 *     * `Completed` - Completed
                 *     * `Failed` - Failed */
                status?: "Completed" | "Failed" | "Pending";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_fees_payments_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Payment"];
                "application/x-www-form-urlencoded": components["schemas"]["Payment"];
                "multipart/form-data": components["schemas"]["Payment"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_fees_payments_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_fees_payments_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Payment"];
                "application/x-www-form-urlencoded": components["schemas"]["Payment"];
                "multipart/form-data": components["schemas"]["Payment"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_fees_payments_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_fees_payments_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPayment"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPayment"];
                "multipart/form-data": components["schemas"]["PatchedPayment"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_librarians_books_list: {
        parameters: {
            query?: {
                author?: string;
                genre?: string;
                /** @description A search term. */
                search?: string;
                title?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Book"][];
                };
            };
        };
    };
    api_librarians_books_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Book"];
                "application/x-www-form-urlencoded": components["schemas"]["Book"];
                "multipart/form-data": components["schemas"]["Book"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Book"];
                };
            };
        };
    };
    api_librarians_books_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Book"];
                };
            };
        };
    };
    api_librarians_books_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Book"];
                "application/x-www-form-urlencoded": components["schemas"]["Book"];
                "multipart/form-data": components["schemas"]["Book"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Book"];
                };
            };
        };
    };
    api_librarians_books_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_librarians_books_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedBook"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedBook"];
                "multipart/form-data": components["schemas"]["PatchedBook"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Book"];
                };
            };
        };
    };
    api_librarians_borrowing_records_list: {
        parameters: {
            query?: {
                book?: number;
                /** @description A search term. */
                search?: string;
                staff?: number;
                /** @description * `Borrowed` - Borrowed
                 *     * `Returned` - Returned
                 *     * `Overdue` - Overdue */
                status?: "Borrowed" | "Overdue" | "Returned";
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BorrowingRecord"][];
                };
            };
        };
    };
    api_librarians_borrowing_records_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BorrowingRecord"];
                "application/x-www-form-urlencoded": components["schemas"]["BorrowingRecord"];
                "multipart/form-data": components["schemas"]["BorrowingRecord"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BorrowingRecord"];
                };
            };
        };
    };
    api_librarians_borrowing_records_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BorrowingRecord"];
                };
            };
        };
    };
    api_librarians_borrowing_records_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BorrowingRecord"];
                "application/x-www-form-urlencoded": components["schemas"]["BorrowingRecord"];
                "multipart/form-data": components["schemas"]["BorrowingRecord"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BorrowingRecord"];
                };
            };
        };
    };
    api_librarians_borrowing_records_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_librarians_borrowing_records_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedBorrowingRecord"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedBorrowingRecord"];
                "multipart/form-data": components["schemas"]["PatchedBorrowingRecord"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BorrowingRecord"];
                };
            };
        };
    };
    api_librarians_overdue_books_list: {
        parameters: {
            query?: {
                book?: number;
                /** @description A search term. */
                search?: string;
                staff?: number;
                /** @description * `Borrowed` - Borrowed
                 *     * `Returned` - Returned
                 *     * `Overdue` - Overdue */
                status?: "Borrowed" | "Overdue" | "Returned";
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BorrowingRecord"][];
                };
            };
        };
    };
    api_reports_attendance_list: {
        parameters: {
            query?: {
                class_session?: number;
                date?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `PRESENT` - Present
                 *     * `ABSENT` - Absent
                 *     * `LATE` - Late
                 *     * `EXCUSED` - Excused */
                status?: "ABSENT" | "EXCUSED" | "LATE" | "PRESENT";
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AttendanceReport"][];
                };
            };
        };
    };
    api_reports_classes_list: {
        parameters: {
            query?: {
                academic_year?: string;
                class_teacher?: number;
                courses?: number[];
                end_time?: string;
                name?: string;
                room?: string;
                /** @description A search term. */
                search?: string;
                start_time?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ClassReport"][];
                };
            };
        };
    };
    api_reports_courses_list: {
        parameters: {
            query?: {
                code?: string;
                /** @description * `PRIMARY` - Primary
                 *     * `JHS` - Junior High School
                 *     * `SHS` - Senior High School
                 *     * `UNIVERSITY` - University */
                level?: "JHS" | "PRIMARY" | "SHS" | "UNIVERSITY" | null;
                name?: string;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CourseReport"][];
                };
            };
        };
    };
    api_reports_custom_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_reports_custom_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_reports_download_report_card_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                report_card_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_reports_enrollment_list: {
        parameters: {
            query?: {
                class_enrolled?: number;
                course?: number;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnrollmentReport"][];
                };
            };
        };
    };
    api_reports_fees_list: {
        parameters: {
            query?: {
                due_date?: string;
                name?: string;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FeeReport"][];
                };
            };
        };
    };
    api_reports_financial_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FeeReport"][];
                };
            };
        };
    };
    api_reports_generate_report_card_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_reports_payments_list: {
        parameters: {
            query?: {
                fee?: number;
                payment_method?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `Pending` - Pending
                 *     * `Completed` - Completed
                 *     * `Failed` - Failed */
                status?: "Completed" | "Failed" | "Pending";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaymentReport"][];
                };
            };
        };
    };
    api_reports_staff_list: {
        parameters: {
            query?: {
                date_joined?: string;
                gender?: string;
                qualification?: string;
                region?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `ADMIN` - Admin
                 *     * `TEACHER` - Teacher
                 *     * `STUDENT` - Student
                 *     * `PARENT` - Parent
                 *     * `STAFF` - Staff
                 *     * `ACCOUNTANT` - Accountant
                 *     * `LIBRARIAN` - Librarian
                 *     * `COUNSELOR` - Counselor */
                user__role?: "ACCOUNTANT" | "ADMIN" | "COUNSELOR" | "LIBRARIAN" | "PARENT" | "STAFF" | "STUDENT" | "TEACHER";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StaffReport"][];
                };
            };
        };
    };
    api_reports_student_performance_list: {
        parameters: {
            query?: {
                course?: number;
                letter_grade?: string;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GradeReport"][];
                };
            };
        };
    };
    api_reports_students_list: {
        parameters: {
            query?: {
                admission_number?: string;
                gender?: string;
                parent__first_name?: string;
                parent__last_name?: string;
                parent__middle_name?: string;
                parent__occupation?: string;
                parent__phone_number?: string;
                parent__user__email?: string;
                region?: string;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StudentReport"][];
                };
            };
        };
    };
    api_staff_list: {
        parameters: {
            query?: {
                date_joined?: string;
                gender?: string;
                qualification?: string;
                region?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `ADMIN` - Admin
                 *     * `TEACHER` - Teacher
                 *     * `STUDENT` - Student
                 *     * `PARENT` - Parent
                 *     * `STAFF` - Staff
                 *     * `ACCOUNTANT` - Accountant
                 *     * `LIBRARIAN` - Librarian
                 *     * `COUNSELOR` - Counselor */
                user__role?: "ACCOUNTANT" | "ADMIN" | "COUNSELOR" | "LIBRARIAN" | "PARENT" | "STAFF" | "STUDENT" | "TEACHER";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Staff"][];
                };
            };
        };
    };
    api_staff_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Staff"];
                "application/x-www-form-urlencoded": components["schemas"]["Staff"];
                "multipart/form-data": components["schemas"]["Staff"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Staff"];
                };
            };
        };
    };
    api_staff_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Staff"];
                };
            };
        };
    };
    api_staff_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Staff"];
                "application/x-www-form-urlencoded": components["schemas"]["Staff"];
                "multipart/form-data": components["schemas"]["Staff"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Staff"];
                };
            };
        };
    };
    api_staff_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_staff_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedStaff"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedStaff"];
                "multipart/form-data": components["schemas"]["PatchedStaff"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Staff"];
                };
            };
        };
    };
    api_staff_payroll_list: {
        parameters: {
            query?: {
                end_date?: string;
                /** @description A search term. */
                search?: string;
                staff?: number;
                start_date?: string;
                /** @description * `Pending` - Pending
                 *     * `Paid` - Paid */
                status?: "Paid" | "Pending";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payroll"][];
                };
            };
        };
    };
    api_staff_payroll_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Payroll"];
                "application/x-www-form-urlencoded": components["schemas"]["Payroll"];
                "multipart/form-data": components["schemas"]["Payroll"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payroll"];
                };
            };
        };
    };
    api_staff_payroll_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payroll"];
                };
            };
        };
    };
    api_staff_payroll_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Payroll"];
                "application/x-www-form-urlencoded": components["schemas"]["Payroll"];
                "multipart/form-data": components["schemas"]["Payroll"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payroll"];
                };
            };
        };
    };
    api_staff_payroll_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_staff_payroll_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPayroll"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPayroll"];
                "multipart/form-data": components["schemas"]["PatchedPayroll"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payroll"];
                };
            };
        };
    };
    api_students_list: {
        parameters: {
            query?: {
                admission_number?: string;
                gender?: string;
                parent__first_name?: string;
                parent__last_name?: string;
                parent__middle_name?: string;
                parent__occupation?: string;
                parent__phone_number?: string;
                parent__user__email?: string;
                region?: string;
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"][];
                };
            };
        };
    };
    api_students_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Student"];
                "application/x-www-form-urlencoded": components["schemas"]["Student"];
                "multipart/form-data": components["schemas"]["Student"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"];
                };
            };
        };
    };
    api_students_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"];
                };
            };
        };
    };
    api_students_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Student"];
                "application/x-www-form-urlencoded": components["schemas"]["Student"];
                "multipart/form-data": components["schemas"]["Student"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"];
                };
            };
        };
    };
    api_students_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_students_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedStudent"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedStudent"];
                "multipart/form-data": components["schemas"]["PatchedStudent"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"];
                };
            };
        };
    };
    api_students_applications_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdmissionApplication"][];
                };
            };
        };
    };
    api_students_applications_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdmissionApplication"];
                "application/x-www-form-urlencoded": components["schemas"]["AdmissionApplication"];
                "multipart/form-data": components["schemas"]["AdmissionApplication"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdmissionApplication"];
                };
            };
        };
    };
    api_students_applications_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdmissionApplication"];
                };
            };
        };
    };
    api_students_applications_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AdmissionApplication"];
                "application/x-www-form-urlencoded": components["schemas"]["AdmissionApplication"];
                "multipart/form-data": components["schemas"]["AdmissionApplication"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdmissionApplication"];
                };
            };
        };
    };
    api_students_applications_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_students_applications_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedAdmissionApplication"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedAdmissionApplication"];
                "multipart/form-data": components["schemas"]["PatchedAdmissionApplication"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AdmissionApplication"];
                };
            };
        };
    };
    api_token_refresh_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenRefresh"];
                "application/x-www-form-urlencoded": components["schemas"]["TokenRefresh"];
                "multipart/form-data": components["schemas"]["TokenRefresh"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenRefresh"];
                };
            };
        };
    };
    api_users_list: {
        parameters: {
            query?: {
                email?: string;
                is_active?: boolean;
                /** @description * `ADMIN` - Admin
                 *     * `TEACHER` - Teacher
                 *     * `STUDENT` - Student
                 *     * `PARENT` - Parent
                 *     * `STAFF` - Staff
                 *     * `ACCOUNTANT` - Accountant
                 *     * `LIBRARIAN` - Librarian
                 *     * `COUNSELOR` - Counselor */
                role?: "ACCOUNTANT" | "ADMIN" | "COUNSELOR" | "LIBRARIAN" | "PARENT" | "STAFF" | "STUDENT" | "TEACHER";
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"][];
                };
            };
        };
    };
    api_users_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
                "application/x-www-form-urlencoded": components["schemas"]["UserCreate"];
                "multipart/form-data": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserCreate"];
                };
            };
        };
    };
    api_users_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
                "application/x-www-form-urlencoded": components["schemas"]["User"];
                "multipart/form-data": components["schemas"]["User"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedUser"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedUser"];
                "multipart/form-data": components["schemas"]["PatchedUser"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_profile_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_login_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TokenObtainPair"];
                "application/x-www-form-urlencoded": components["schemas"]["TokenObtainPair"];
                "multipart/form-data": components["schemas"]["TokenObtainPair"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenObtainPair"];
                };
            };
        };
    };
    api_users_logout_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_me_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_me_update: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["User"];
                "application/x-www-form-urlencoded": components["schemas"]["User"];
                "multipart/form-data": components["schemas"]["User"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_me_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedUser"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedUser"];
                "multipart/form-data": components["schemas"]["PatchedUser"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    api_users_parent_children_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"][];
                };
            };
        };
    };
    api_users_parent_children_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Student"];
                };
            };
        };
    };
    api_users_parent_children_assignments_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Assignment"][];
                };
            };
        };
    };
    api_users_parent_children_attendance_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Attendance"][];
                };
            };
        };
    };
    api_users_parent_children_classes_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Class"][];
                };
            };
        };
    };
    api_users_parent_children_enrollments_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Enrollment"][];
                };
            };
        };
    };
    api_users_parent_children_fees_fees_list: {
        parameters: {
            query?: {
                due_date?: string;
                name?: string;
                /** @description A search term. */
                search?: string;
                student?: number;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"][];
                };
            };
        };
    };
    api_users_parent_children_fees_fees_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Fee"];
                "application/x-www-form-urlencoded": components["schemas"]["Fee"];
                "multipart/form-data": components["schemas"]["Fee"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_users_parent_children_fees_fees_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_users_parent_children_fees_fees_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Fee"];
                "application/x-www-form-urlencoded": components["schemas"]["Fee"];
                "multipart/form-data": components["schemas"]["Fee"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_users_parent_children_fees_fees_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_parent_children_fees_fees_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedFee"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedFee"];
                "multipart/form-data": components["schemas"]["PatchedFee"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"];
                };
            };
        };
    };
    api_users_parent_children_fees_parent_payments_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_users_parent_children_fees_parent_students_unpaid_fees_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"][];
                };
            };
        };
    };
    api_users_parent_children_fees_payments_list: {
        parameters: {
            query?: {
                fee?: number;
                payment_method?: string;
                /** @description A search term. */
                search?: string;
                /** @description * `Pending` - Pending
                 *     * `Completed` - Completed
                 *     * `Failed` - Failed */
                status?: "Completed" | "Failed" | "Pending";
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_users_parent_children_fees_payments_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Payment"];
                "application/x-www-form-urlencoded": components["schemas"]["Payment"];
                "multipart/form-data": components["schemas"]["Payment"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_users_parent_children_fees_payments_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_users_parent_children_fees_payments_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Payment"];
                "application/x-www-form-urlencoded": components["schemas"]["Payment"];
                "multipart/form-data": components["schemas"]["Payment"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_users_parent_children_fees_payments_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_parent_children_fees_payments_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedPayment"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedPayment"];
                "multipart/form-data": components["schemas"]["PatchedPayment"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"];
                };
            };
        };
    };
    api_users_parent_children_grades_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Grade"][];
                };
            };
        };
    };
    api_users_parent_children_unpaid_fees_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path: {
                student_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Fee"][];
                };
            };
        };
    };
    api_users_parent_payments_list: {
        parameters: {
            query?: {
                /** @description A search term. */
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Payment"][];
                };
            };
        };
    };
    api_users_parents_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Parent"][];
                };
            };
        };
    };
    api_users_parents_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Parent"];
                "application/x-www-form-urlencoded": components["schemas"]["Parent"];
                "multipart/form-data": components["schemas"]["Parent"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Parent"];
                };
            };
        };
    };
    api_users_parents_retrieve: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Parent"];
                };
            };
        };
    };
    api_users_parents_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Parent"];
                "application/x-www-form-urlencoded": components["schemas"]["Parent"];
                "multipart/form-data": components["schemas"]["Parent"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Parent"];
                };
            };
        };
    };
    api_users_parents_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_parents_partial_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["PatchedParent"];
                "application/x-www-form-urlencoded": components["schemas"]["PatchedParent"];
                "multipart/form-data": components["schemas"]["PatchedParent"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Parent"];
                };
            };
        };
    };
    api_users_password_reset_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_password_reset_confirm_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                token: string;
                uid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_users_register_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
