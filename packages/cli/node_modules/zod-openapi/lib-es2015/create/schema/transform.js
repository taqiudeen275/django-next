import { throwTransformError } from '../errors';
import { createManualTypeSchema } from './manual';
import { createSchemaOrRef } from '.';
export const createTransformSchema = (zodTransform, state) => {
    const creationType = zodTransform._def.openapi?.effectType ?? state.type;
    if (creationType === 'output') {
        return createManualTypeSchema(zodTransform);
    }
    if (!zodTransform._def.openapi?.effectType && state.type === 'input') {
        if (state.effectType && state.effectType !== 'input') {
            throwTransformError(zodTransform);
        }
        state.effectType = 'input';
    }
    return createSchemaOrRef(zodTransform._def.schema, state);
};
//# sourceMappingURL=transform.js.map