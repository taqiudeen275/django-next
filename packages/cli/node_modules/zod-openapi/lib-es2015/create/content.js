import { ZodType } from 'zod';
import { createSchemaOrRef } from './schema';
const createMediaTypeSchema = (schemaObject, components, type) => {
    if (!schemaObject) {
        return undefined;
    }
    if (!(schemaObject instanceof ZodType)) {
        return schemaObject;
    }
    return createSchemaOrRef(schemaObject, {
        components,
        type,
    });
};
const createMediaTypeObject = (mediaTypeObject, components, type) => {
    if (!mediaTypeObject) {
        return undefined;
    }
    return {
        ...mediaTypeObject,
        schema: createMediaTypeSchema(mediaTypeObject.schema, components, type),
    };
};
export const createContent = (contentObject, components, type) => Object.entries(contentObject).reduce((acc, [path, zodOpenApiMediaTypeObject]) => {
    const mediaTypeObject = createMediaTypeObject(zodOpenApiMediaTypeObject, components, type);
    if (mediaTypeObject) {
        acc[path] = mediaTypeObject;
    }
    return acc;
}, {});
//# sourceMappingURL=content.js.map