import { oas31 } from 'openapi3-ts';
import { UnknownKeysParam, ZodObject, ZodRawShape } from 'zod';
import { SchemaState } from '.';
export declare const createObjectSchema: <T extends ZodRawShape, UnknownKeys extends UnknownKeysParam = UnknownKeysParam>(zodObject: ZodObject<T, UnknownKeys, any, any, any>, state: SchemaState) => oas31.SchemaObject;
export declare const createExtendedSchema: (zodObject: ZodObject<any, any, any, any, any>, baseZodObject: ZodObject<any, any, any, any, any>, schemaRef: string, state: SchemaState) => oas31.SchemaObject;
export declare const createObjectSchemaFromShape: (shape: ZodRawShape, strict: boolean, state: SchemaState) => oas31.SchemaObject;
export declare const mapRequired: (shape: ZodRawShape) => oas31.SchemaObject['required'];
export declare const mapProperties: (shape: ZodRawShape, state: SchemaState) => oas31.SchemaObject['properties'];
