import { oas31 } from 'openapi3-ts';
import { ZodType, ZodTypeDef } from 'zod';
import { ComponentsObject, CreationType } from '../components';
export interface SchemaState {
    components: ComponentsObject;
    type: CreationType;
    effectType?: CreationType;
}
export declare const createSchema: <Output = any, Def extends ZodTypeDef = ZodTypeDef, Input = Output>(zodSchema: ZodType<Output, Def, Input>, state: SchemaState) => oas31.SchemaObject | oas31.ReferenceObject;
export declare const createSchemaOrRef: <Output = any, Def extends ZodTypeDef = ZodTypeDef, Input = Output>(zodSchema: ZodType<Output, Def, Input>, state: SchemaState) => oas31.ReferenceObject | oas31.SchemaObject;
