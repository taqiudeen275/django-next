"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapProperties = exports.mapRequired = exports.createObjectSchemaFromShape = exports.createExtendedSchema = exports.createObjectSchema = void 0;
const components_1 = require("../components");
const _1 = require(".");
const createObjectSchema = (zodObject, state) => {
    if (zodObject._def.extendMetadata?.extendsRef) {
        return (0, exports.createExtendedSchema)(zodObject, zodObject._def.extendMetadata.extends, zodObject._def.extendMetadata.extendsRef, state);
    }
    return (0, exports.createObjectSchemaFromShape)(zodObject.shape, zodObject._def.unknownKeys === 'strict', state);
};
exports.createObjectSchema = createObjectSchema;
const createExtendedSchema = (zodObject, baseZodObject, schemaRef, state) => {
    const diffShape = createShapeDiff(baseZodObject._def.shape(), zodObject._def.shape());
    return {
        allOf: [
            { $ref: (0, components_1.createComponentSchemaRef)(schemaRef) },
            (0, exports.createObjectSchemaFromShape)(diffShape, false, state),
        ],
    };
};
exports.createExtendedSchema = createExtendedSchema;
const createShapeDiff = (baseObj, extendedObj) => Object.entries(extendedObj).reduce((acc, [key, val]) => {
    if (val !== baseObj[key]) {
        acc[key] = extendedObj[key];
    }
    return acc;
}, {});
const createObjectSchemaFromShape = (shape, strict, state) => ({
    type: 'object',
    properties: (0, exports.mapProperties)(shape, state),
    required: (0, exports.mapRequired)(shape),
    ...(strict && { additionalProperties: false }),
});
exports.createObjectSchemaFromShape = createObjectSchemaFromShape;
const mapRequired = (shape) => {
    const required = Object.entries(shape)
        .filter(([_key, zodSchema]) => !zodSchema.isOptional())
        .map(([key]) => key);
    if (!required.length) {
        return undefined;
    }
    return required;
};
exports.mapRequired = mapRequired;
const mapProperties = (shape, state) => Object.entries(shape).reduce((acc, [key, zodSchema]) => {
    acc[key] = (0, _1.createSchemaOrRef)(zodSchema, state);
    return acc;
}, {});
exports.mapProperties = mapProperties;
//# sourceMappingURL=object.js.map